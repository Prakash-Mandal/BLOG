<?php

namespace models;

class User extends Model
{
    protected $userId = 0;
    protected $firstName = "";
    protected $lastName = "";
    protected $emailId = "";

    private $password = "";

    public function __construct() {
        parent::__construct();
    }

    /**
     * @return mixed
     */
    public function getUserId()
    {
        return $this->userId;
    }

    /**
     * @param mixed $userId
     */
    public function setUserId($userId)
    {
        $this->userId = $userId;
    }

    /**
     * @return mixed
     */
    public function getFirstName()
    {
        return $this->firstName;
    }

    /**
     * @param mixed $firstName
     */
    public function setFirstName($firstName)
    {
        $this->firstName = $firstName;
    }

    /**
     * @return mixed
     */
    public function getLastName()
    {
        return $this->lastName;
    }

    /**
     * @param mixed $lastName
     */
    public function setLastName($lastName)
    {
        $this->lastName = $lastName;
    }

    /**
     * @return mixed
     */
    public function getEmailId()
    {
        return $this->emailId;
    }

    /**
     * @param mixed $emailId
     */
    public function setEmailId($emailId)
    {
        $this->emailId = $emailId;
    }

    public function validateUser()
    {
        $this->setEmailId(\ValidationHelper::validateInput($_POST["u_email"]));
        $this->password = \ValidationHelper::validateInput($_POST["pass"]);
        $pass_hash = hash('gost', $this->getEmailId().$this->password, false) . $this->password;

        $sql = 'Select `User_Id`,`First_Name`,`Last_Name`,`Email_Id`, 
            `Password` from Assignments.Blog_User where Email_Id = :value0';
        $params = [":value0" => $this->getEmailId()];

        $this->db->startConnection();
        $result = $this->db->querySQL($sql, $params);
        $this->db->stopConnection();

        if (0 !== count($result)) {
            if($pass_hash === $result[0]["Password"]) {
                return $result;
            }
            return 0;
        } else {
            return null;
        }
    }

    public function addUser()
    {
        $this->setFirstName(\ValidationHelper::validateInput($_POST["first_name"]));
        $this->setLastName(\ValidationHelper::validateInput($_POST["last_name"]));
        $this->setEmailId(\ValidationHelper::validateInput($_POST["email"]));
        $this->password = \ValidationHelper::validateInput($_POST["pass"]);

        $pass_hash = hash('gost', $this->getEmailId().$this->password, false) . $this->password;


        $sql = 'INSERT INTO Assignments.Blog_User(`First_Name`,`Last_Name`,
            `Email_Id`,`Password`) VALUES( :value0 , :value1, :value2, :value3)';
        $param = [
            ":value0" => $this->getFirstName(),
            ":value1" => $this->getLastName(),
            ":value2" => $this->getEmailId(),
            ":value3" => $this->password
        ];

        $result = $this->db->querySQL($sql, $param);

        return $result;

    }

    public function __toString()
    {
        $text = parent::__toString(); // TODO: Change the autogenerated stub
        $text .= "<br>Name : " . $this->getFirstName() . ' ' . $this->getLastName() . '<br>';
        $text .= "Email Id : " . $this->getEmailId() . '<br>';
        $text .= "User Id : " . $this->getUserId() . '<br>';
        return $text;
    }
}